.row,
.icons {
	display: flex;
}

.row > *,
.icons > * {
	margin: 0 0.5em;
}

p,
ul,
h2,
h3 {
	padding: 0.8em 0;
}

h2 {
	margin-top: 2em;
}

h3 {
	font-size: 0.8rem;
	margin-top: 1em;
	color: var(--text2);
}

li {
	list-style: none;
}

li:before {
	content: '-';
	margin-right: 0.5em;
	color: var(--primary-color);
}

.divider {
	border-bottom: 1px solid var(--header-background-color);
}

.example {
	padding: 2em;
	box-shadow: 0px 0px 4px rgb(0 0 0 / 50%);
	background: var(--tertiary-bg-color);
}

.menu {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.section {
	padding: 1em;
}

#copyurlbutton {
	width: 25em;
}

section {
	display: grid;
	gap: 2ch;
	align-items: flex-start;
}

.gui-switch {
	display: flex;
	align-items: center;
	gap: 2ch;
	justify-content: space-between;

	--thumb-size: 2rem;
	--thumb: hsl(0 0% 100%);
	--thumb-highlight: hsl(0 0% 0% / 25%);

	--thumb-color: var(--thumb);
	--thumb-color-highlight: var(--thumb-highlight);

	--track-size: calc(var(--thumb-size) * 2);
	--track-padding: 2px;

	--track-inactive: hsl(80 0% 80%);
	--track-active: hsl(80 60% 45%);

	--track-color-inactive: var(--track-inactive);
	--track-color-active: var(--track-active);

	@media (prefers-color-scheme: dark) {
		--thumb: hsl(0 0% 5%);
		--thumb-highlight: hsl(0 0% 100% / 25%);
		--track-inactive: hsl(80 0% 35%);
		--track-active: hsl(80 60% 60%);
	}

	cursor: pointer;
	user-select: none;
	-webkit-tap-highlight-color: transparent;

	--isLTR: 1;

	&:dir(rtl) {
		--isLTR: -1;
	}
}

.gui-switch > input {
	appearance: none;
	border: none;
	outline-offset: 5px;
	box-sizing: content-box;

	padding: var(--track-padding);
	background: var(--track-color-inactive);
	inline-size: var(--track-size);
	block-size: var(--thumb-size);
	border-radius: var(--track-size);

	flex-shrink: 0;
	display: grid;
	align-items: center;
	grid: [track] 1fr / [track] 1fr;
	--thumb-position: 0%;

	touch-action: pan-y;
}

.gui-switch > input::before {
	transform: translateX(var(--thumb-position));

	content: '';
	grid-area: track;
	inline-size: var(--thumb-size);
	block-size: var(--thumb-size);

	background: var(--thumb-color);
	border-radius: 50%;

	box-shadow: 0 0 0 var(--highlight-size) var(--thumb-color-highlight);

	@media (--motionOK) {
		& {
			transition: transform var(--thumb-transition-duration) ease, box-shadow 0.25s ease;
		}
	}
}

.gui-switch > input:not(:disabled):hover::before {
	--highlight-size: 0.5rem;
}

/* positioned at the end of the track: track length - 100% (thumb width) */
.gui-switch > input:checked {
	background: var(--track-color-active);
	--thumb-position: calc((var(--track-size) - 100%) * var(--isLTR));
}

/* positioned in the center of the track: half the track - half the thumb */
.gui-switch > input:indeterminate {
	--thumb-position: calc(((var(--track-size) / 2) - (var(--thumb-size) / 2)) * var(--isLTR));
}

.gui-switch.-vertical {
	min-block-size: calc(var(--track-size) + calc(var(--track-padding) * 2));

	& > input {
		transform: rotate(calc(90deg * var(--isLTR) * -1));
	}
}

.gui-switch > input:disabled {
	cursor: not-allowed;
	--thumb-color: transparent;

	&::before {
		cursor: not-allowed;
		box-shadow: inset 0 0 0 2px hsl(0 0% 100% / 50%);

		@media (prefers-color-scheme: dark) {
			& {
				box-shadow: inset 0 0 0 2px hsl(0 0% 0% / 50%);
			}
		}
	}
}
